image: docker:stable

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_TLS_CERTDIR: ""
  MYSQL_DATABASE: test
  MYSQL_ROOT_PASSWORD: db_password

services:
  - docker:dind

stages:
  - migrations
  - test
  - build
  - deploy

lint:
  image: golangci/golangci-lint:v1.36.0
  stage: test
  before_script:
    - go get -v github.com/swaggo/swag/cmd/swag
    - $GOPATH/bin/swag init -g cmd/main.go
  script:
    - golangci-lint run -v
  allow_failure: true

migrations:
  image: golang:1.13.3-alpine3.10
  services:
    - mysql:5.7
  tags:
    - dind
    - docker
  stage: migrations
  before_script:
    - apk add --no-cache --update git build-base openssh-client
    - cp .env.testing.gitlab-ci .env
    - go get -v github.com/swaggo/swag/cmd/swag
    - $GOPATH/bin/swag init -g cmd/main.go
  script:
    - go get -v ./...
    - go run migrations/entry.go --env-path=./ --verbose
    - go run migrations/entry.go --rollback --env-path=./ --verbose

test:
  image: golang:1.13.3-alpine3.10
  services:
    - mysql:5.7
  tags:
    - dind
    - docker
  stage: test
  before_script:
    - apk add --no-cache --update git build-base openssh-client
    - cp .env.testing.gitlab-ci .env.testing
    - go get -v github.com/swaggo/swag/cmd/swag
    - $GOPATH/bin/swag init -g cmd/main.go
  script:
    - go get -v ./...
    - go test -v ./...

build:
  tags:
    - dind
    - docker
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cp deploy/Dockerfile .
    - docker build
      --build-arg WEB_PRIVATE_KEY="$WEB_PRIVATE_KEY"
      --build-arg GIT_DOMAIN=$CI_SERVER_HOST
      -t $CI_REGISTRY_IMAGE:staging .
    - docker push $CI_REGISTRY_IMAGE:staging

deploy staging:
  image: golang:1.13.3-alpine3.10
  environment:
    name: staging
  when: manual
  only:
    refs:
      - develop
  tags:
    - dind
    - docker
  stage: deploy
  before_script:
    - apk add --update openssh-client bash
    - mkdir -p ~/.ssh
    - echo "$STAGING_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $STAGING_IP >> ~/.ssh/known_hosts
    - GOOS=linux GOARCH=386 go build -o entry  migrations/entry.go
  script:
    - ssh dev@${STAGING_IP} "mkdir -p ${PROJECT_PATH}"
    - scp -r ${STAGING_ENV} dev@${STAGING_IP}:${PROJECT_PATH}/.env
    - scp -r ${MIGRATION_ENV} dev@${STAGING_IP}:${PROJECT_PATH}/.env.migration
    - scp -r ./deploy/docker-compose.yml dev@${STAGING_IP}:${PROJECT_PATH}/docker-compose.yml
    - ssh dev@$STAGING_IP "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY};
      docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:staging;
      docker-compose -f ${PROJECT_PATH}/docker-compose.yml up -d"
    - scp -r ./entry dev@${STAGING_IP}:${PROJECT_PATH}/entry
    - ssh dev@${STAGING_IP} "${PROJECT_PATH}/entry --env-path=${PROJECT_PATH} --env-file=.env.migration --verbose"
