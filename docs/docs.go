// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "medilane team",
            "url": "https://www.medilane.vn/"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Management"
                ],
                "summary": "Create account in system",
                "operationId": "create-account",
                "parameters": [
                    {
                        "description": "Create account",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/account/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Management"
                ],
                "summary": "Search account in system",
                "operationId": "search-account",
                "parameters": [
                    {
                        "description": "Filter account",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.UserSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/account/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Management"
                ],
                "summary": "Get account in system",
                "operationId": "get-account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Management"
                ],
                "summary": "Edit account in system",
                "operationId": "edit-account",
                "parameters": [
                    {
                        "description": "body account",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.EditAccountRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Management"
                ],
                "summary": "Delete account in system",
                "operationId": "delete-account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/account/{id}/drugstore": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform assign staff for drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Management"
                ],
                "summary": "assign staff for drugstore in system",
                "operationId": "assign-staff-for-drugstore",
                "parameters": [
                    {
                        "description": "body account",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AssignStaffRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/account/{username}/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search all permission of accoun",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Management"
                ],
                "summary": "Search all permission of account in system",
                "operationId": "search-permission-account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DataSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/address": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Management"
                ],
                "summary": "Create address in system",
                "operationId": "create-address",
                "parameters": [
                    {
                        "description": "Create address",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AddressRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/address/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Management"
                ],
                "summary": "Search address in system",
                "operationId": "search-address",
                "parameters": [
                    {
                        "description": "Filter address",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.AddressSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/address/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Management"
                ],
                "summary": "Get address in system",
                "operationId": "get-address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id address",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Address"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Management"
                ],
                "summary": "Edit address in system",
                "operationId": "edit-address",
                "parameters": [
                    {
                        "description": "Edit address",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AddressRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id address",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address Management"
                ],
                "summary": "Delete address in system",
                "operationId": "delete-address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id address",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/area": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area Management"
                ],
                "summary": "Create area in system",
                "operationId": "create-area",
                "parameters": [
                    {
                        "description": "Create area",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AreaRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/area/cost": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform set cost products of area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area Management"
                ],
                "summary": "Set cost products of area in system",
                "operationId": "set-cost-products-of-area",
                "parameters": [
                    {
                        "description": "set cost products of area",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SetCostProductsOfAreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/area/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area Management"
                ],
                "summary": "Search area in system",
                "operationId": "search-area",
                "parameters": [
                    {
                        "description": "Filter area",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchAreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.AreaSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/area/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area Management"
                ],
                "summary": "Edit area in system",
                "operationId": "get-area",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id area",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Area"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area Management"
                ],
                "summary": "Edit area in system",
                "operationId": "edit-area",
                "parameters": [
                    {
                        "description": "Edit area",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AreaRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id area",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area Management"
                ],
                "summary": "Delete area in system",
                "operationId": "delete-area",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id area",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/area/{id}/config": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform config area contain which province and district area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area Management"
                ],
                "summary": "Config area contain which province and district in system",
                "operationId": "config-area",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id area",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config area",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AreaConfigListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/area/{id}/cost": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get products of area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area Management"
                ],
                "summary": "Get products of area in system",
                "operationId": "get-products-of-area",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id area",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Filter product",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/banner": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner Management"
                ],
                "summary": "Create banner",
                "operationId": "create-banner",
                "parameters": [
                    {
                        "description": "Create banner",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateBannerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.BannerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/banner/delete": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner Management"
                ],
                "summary": "Delete banner",
                "operationId": "delete-banner",
                "parameters": [
                    {
                        "description": "Edit banner",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DeleteBanner"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/banner/edit": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner Management"
                ],
                "summary": "Edit banner",
                "operationId": "edit-banner",
                "parameters": [
                    {
                        "description": "Edit banner",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.EditBannerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/banner/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform banner setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner Management"
                ],
                "summary": "Search banner in system",
                "operationId": "search-banner",
                "parameters": [
                    {
                        "description": "Filter setting",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchBannerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.BannerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/banner/id": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get banner setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner Management"
                ],
                "summary": "Get banner in system",
                "operationId": "get-banner",
                "parameters": [
                    {
                        "description": "Filter setting",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchBannerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Banner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/cart": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart Management"
                ],
                "summary": "Create cart in system",
                "operationId": "create-cart",
                "parameters": [
                    {
                        "description": "Create cart",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CartRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.CreatedCart"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/cart/details": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart Management"
                ],
                "summary": "Create cart in system",
                "operationId": "create-cart-item",
                "parameters": [
                    {
                        "description": "Create cart item",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CartItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/cart/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search cart item by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart Management"
                ],
                "summary": "Search cart item by username in system",
                "operationId": "search-cart-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.CartSearch"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/cart/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart Management"
                ],
                "summary": "Delete cart in system",
                "operationId": "delete-cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id cart",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/cart/{id}/details": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete cart item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart Management"
                ],
                "summary": "Delete cart item in system",
                "operationId": "delete-cart-item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id cart item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/category": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category-Management"
                ],
                "summary": "Create category in system",
                "operationId": "create-category",
                "parameters": [
                    {
                        "description": "Filter Category",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/category/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category-Management"
                ],
                "summary": "Search category in system",
                "operationId": "search-category",
                "parameters": [
                    {
                        "description": "Filter Category",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.CategorySearch"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/category/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category-Management"
                ],
                "summary": "Edit category in system",
                "operationId": "edit-category",
                "parameters": [
                    {
                        "description": "body Category",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CategoryRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id Category",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category-Management"
                ],
                "summary": "Delete category in system",
                "operationId": "delete-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id Category",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/drugstore": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Create drugstore in system",
                "operationId": "create-drugstore",
                "parameters": [
                    {
                        "description": "Filter drugstore",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DrugStoreRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/drugstore/connective": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform connective drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Connective drugstore in system",
                "operationId": "connective-drugstore",
                "parameters": [
                    {
                        "description": "Filter role",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ConnectiveDrugStoreRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/drugstore/connective/type/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform Get type connective drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Get type connective drugstore in system",
                "operationId": "get-type-connective-drugstore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id drugstore",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/drugstore/connective/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform Get list connective drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Get list connective drugstore in system",
                "operationId": "get-list-connective-drugstore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id drugstore",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.GetRelationshipResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/drugstore/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search drugstores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Search drugstores in system",
                "operationId": "search-drugstore",
                "parameters": [
                    {
                        "description": "Drugstore's credentials",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchDrugStoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DrugStoreSearch"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/drugstore/statistic-new": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform statistic new drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Statistic new drugstore in system",
                "operationId": "statistic-new-drugstore",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.StatisticNewDrugStoreResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/drugstore/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Get drugstore in system",
                "operationId": "get-drugstore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id drugstore",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DrugStore"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Edit drugstore in system",
                "operationId": "edit-drugstore",
                "parameters": [
                    {
                        "description": "body drugstore",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.EditDrugStoreRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id drugstore",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform drugstore role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Delete drugstore in system",
                "operationId": "delete-drugstore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id drugstore",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/drugstore/{id}/accounts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search account in drugstore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drugstore Management"
                ],
                "summary": "Search account in drugstore in system",
                "operationId": "search-account-drugstore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of drugstore",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.UserSearch"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Perform user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Actions"
                ],
                "summary": "Authenticate a user",
                "operationId": "user-login",
                "parameters": [
                    {
                        "description": "User's credentials",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform refresh access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Actions"
                ],
                "summary": "Refresh access token",
                "operationId": "user-logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/notification/find": {
            "post": {
                "description": "Perform search notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification Management"
                ],
                "summary": "Search notification in system",
                "operationId": "search-notification",
                "parameters": [
                    {
                        "description": "Notification's credentials",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.NotificationSearch"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Create order in system",
                "operationId": "create-order",
                "parameters": [
                    {
                        "description": "Create account",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.OrderCreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/order/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Search order in system",
                "operationId": "search-order",
                "parameters": [
                    {
                        "description": "Create cart",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.OrderResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/order/payment-methods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get payment method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Get payment method in system",
                "operationId": "get-payment-method",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.PaymentMethodResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/order/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Edit order in system",
                "operationId": "get-order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id order",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Edit order in system",
                "operationId": "edit-order",
                "parameters": [
                    {
                        "description": "body order",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.EditOrderRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id order",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Delete order in system",
                "operationId": "delete-order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id order",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/partner": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create partner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partner Management"
                ],
                "summary": "Create partner in system",
                "operationId": "create-partner",
                "parameters": [
                    {
                        "description": "Filter partner",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreatePartnerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/partner/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search partner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partner Management"
                ],
                "summary": "Search partner in system",
                "operationId": "search-partner",
                "parameters": [
                    {
                        "description": "search partner",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchPartnerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.PartnerSearch"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/partner/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get partner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partner Management"
                ],
                "summary": "Get partner in system",
                "operationId": "get-partner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id partner",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Partner"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit partner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partner Management"
                ],
                "summary": "Edit partner in system",
                "operationId": "edit-partner",
                "parameters": [
                    {
                        "description": "body partner",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.EditPartnerRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id partner",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform partner role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partner Management"
                ],
                "summary": "Delete partner in system",
                "operationId": "delete-partner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id partner",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/permission": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Management"
                ],
                "summary": "Create permission in system",
                "operationId": "create-permission",
                "parameters": [
                    {
                        "description": "Create permission",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/permission/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Management"
                ],
                "summary": "Search permission in system",
                "operationId": "search-permission",
                "parameters": [
                    {
                        "description": "Filter permission",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchPermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.PermissionSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/permission/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Management"
                ],
                "summary": "Edit permission in system",
                "operationId": "edit-permission",
                "parameters": [
                    {
                        "description": "body permission",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PermissionRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id permission",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Management"
                ],
                "summary": "Delete permission in system",
                "operationId": "delete-permission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id permission",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/product": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Create product in system",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "Filter product",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/product/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Search product in system",
                "operationId": "search-product",
                "parameters": [
                    {
                        "description": "Filter product",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/product/pure-search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform only search product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Search only product in system",
                "operationId": "search-pure-product",
                "parameters": [
                    {
                        "description": "Filter product",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchPureProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/product/suggest": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform suggest product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Suggest product in system",
                "operationId": "suggest-product",
                "parameters": [
                    {
                        "description": "Suggest product",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchSuggestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Get product in system",
                "operationId": "get-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id product",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "area id",
                        "name": "area_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Edit product in system",
                "operationId": "edit-product",
                "parameters": [
                    {
                        "description": "body product",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ProductRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id product",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Delete product in system",
                "operationId": "delete-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id product",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/product/{id}/pure": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get pure product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Get pure product in system",
                "operationId": "get-pure-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id product",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/products/status": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform Change status of list product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Management"
                ],
                "summary": "Change status of list product in system",
                "operationId": "change-status-products",
                "parameters": [
                    {
                        "description": "body change status products",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ChangeStatusProductsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.MessageDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/promotion": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create promotion with list details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Create promotion with list details in system",
                "operationId": "create-promotion",
                "parameters": [
                    {
                        "description": "Create promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PromotionWithDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/promotion/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Search promotion in system",
                "operationId": "search-promotion",
                "parameters": [
                    {
                        "description": "Filter promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchPromotionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.PromotionSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/promotion/top-product": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search product in promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Search product in promotion in system",
                "operationId": "search-product-promotion",
                "parameters": [
                    {
                        "description": "Filter promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchProductPromotion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductInPromotionSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/promotion/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Get promotion in system",
                "operationId": "get-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit promotion with list detail. in list detail. leave Id=0 if create new",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Edit promotion with list detail in system",
                "operationId": "edit-promotion",
                "parameters": [
                    {
                        "description": "body promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PromotionWithDetailRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Delete promotion (soft delete) in system",
                "operationId": "delete-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/promotion/{id}/details": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create multi promotion detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Create multi promotion detail in system",
                "operationId": "create-promotion-detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PromotionDetailRequestList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete promotion detail by promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Delete promotion detail by promotion in system",
                "operationId": "delete-promotion-detail-by-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/promotion/{id}/details/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search promotion detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Search promotion detail in system",
                "operationId": "search-promotion-detail",
                "parameters": [
                    {
                        "description": "Filter promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchPromotionDetail"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.PromotionDetailSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/promotion/{id}/details/{d_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Edit promotion detail in system",
                "operationId": "edit-promotion-detail",
                "parameters": [
                    {
                        "description": "body promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.PromotionDetailRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id promotion detail",
                        "name": "d_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete promotion detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Delete promotion detail in system",
                "operationId": "delete-promotion-detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id promotion detail",
                        "name": "d_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/promotion/{id}/product": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search product by promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion Management"
                ],
                "summary": "Search product by promotion in system",
                "operationId": "search-product-by-promotion",
                "parameters": [
                    {
                        "description": "Filter promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchProductByPromotion"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id promotion",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductInPromotionSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform refresh access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Actions"
                ],
                "summary": "Refresh access token",
                "operationId": "user-refresh",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "New user registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Actions"
                ],
                "summary": "Register",
                "operationId": "user-register",
                "parameters": [
                    {
                        "description": "User's email, user's password",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/role": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Management"
                ],
                "summary": "Create role in system",
                "operationId": "create-role",
                "parameters": [
                    {
                        "description": "Filter role",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RoleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/role/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Management"
                ],
                "summary": "Search role in system",
                "operationId": "search-role",
                "parameters": [
                    {
                        "description": "Filter role",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.RoleSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/role/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Management"
                ],
                "summary": "Edit role in system",
                "operationId": "edit-role",
                "parameters": [
                    {
                        "description": "body role",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RoleRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id role",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Management"
                ],
                "summary": "Delete role in system",
                "operationId": "delete-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id role",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/setting": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Setting Management"
                ],
                "summary": "Create setting",
                "operationId": "create-setting",
                "parameters": [
                    {
                        "description": "Create setting",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SettingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AppSetting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/setting/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Setting Management"
                ],
                "summary": "Search setting in system",
                "operationId": "setting-promotion",
                "parameters": [
                    {
                        "description": "Filter setting",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AppSetting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/setting/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Setting Management"
                ],
                "summary": "Edit setting",
                "operationId": "edit-setting",
                "parameters": [
                    {
                        "description": "Create setting",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SettingRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AppSetting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/statistic/drugstore_count": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform statistic drugstore order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic Management"
                ],
                "summary": "Statistic drugstore in system",
                "operationId": "statistic-drugstore",
                "parameters": [
                    {
                        "description": "request statistic ",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DrugStoreStatisticRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.DrugStoreStatisticResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/statistic/order_count": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform statistic order count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic Management"
                ],
                "summary": "Statistic order count in system",
                "operationId": "statistic-order-count",
                "parameters": [
                    {
                        "description": "request statistic ",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.OrderStatisticCountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.OrderStatisticCountResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/statistic/order_store_amount": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform statistic product count top by time and area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic Management"
                ],
                "summary": "Statistic product count top by time and area in system",
                "operationId": "statistic-order-store-count-top",
                "parameters": [
                    {
                        "description": "request statistic ",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.OrderStoreStatisticCountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.OrderDrugstoreCountResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/statistic/product_count": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform statistic product count top by time and area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic Management"
                ],
                "summary": "Statistic product count top by time and area in system",
                "operationId": "statistic-product-count=top",
                "parameters": [
                    {
                        "description": "request statistic ",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ProductStatisticCountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductStatisticCountResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/tag": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create Tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag Management"
                ],
                "summary": "Create Tag in system",
                "operationId": "create-tag",
                "parameters": [
                    {
                        "description": "Filter Tag",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TagRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/tag/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search Tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag Management"
                ],
                "summary": "Search Tag in system",
                "operationId": "search-tag",
                "parameters": [
                    {
                        "description": "Filter Tag",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.TagSearch"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/tag/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit Tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag Management"
                ],
                "summary": "Edit Tag in system",
                "operationId": "edit-tag",
                "parameters": [
                    {
                        "description": "body Tag",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TagRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id Tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete Tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag Management"
                ],
                "summary": "Delete Tag in system",
                "operationId": "delete-tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id Tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/variant": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create variant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variant-Management"
                ],
                "summary": "Create variant in system",
                "operationId": "create-variant",
                "parameters": [
                    {
                        "description": "Filter Variant",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.VariantRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/variant/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search variant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variant-Management"
                ],
                "summary": "Search variant in system",
                "operationId": "search-variant",
                "parameters": [
                    {
                        "description": "Filter Variant",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchVariantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.VariantSearch"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/variant/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit variant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variant-Management"
                ],
                "summary": "Edit variant in system",
                "operationId": "get-variant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id Variant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Variant"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit variant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variant-Management"
                ],
                "summary": "Edit variant in system",
                "operationId": "edit-variant",
                "parameters": [
                    {
                        "description": "body Variant",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.VariantRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id Variant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete variant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variant-Management"
                ],
                "summary": "Delete variant in system",
                "operationId": "delete-variant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id Variant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/voucher": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform create voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher Management"
                ],
                "summary": "Create voucher  in system",
                "operationId": "create-voucher",
                "parameters": [
                    {
                        "description": "Create promotion",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.VoucherRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Voucher"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/voucher/find": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform search voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher Management"
                ],
                "summary": "Search voucher in system",
                "operationId": "search-voucher",
                "parameters": [
                    {
                        "description": "Filter voucher",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SearchVoucherRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.VoucherSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/voucher/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform get voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher Management"
                ],
                "summary": "Get voucher in system",
                "operationId": "get-voucher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id voucher",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Voucher"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform edit voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher Management"
                ],
                "summary": "Edit voucher in system",
                "operationId": "edit-voucher",
                "parameters": [
                    {
                        "description": "body voucher",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.VoucherRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id voucher",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform delete voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher Management"
                ],
                "summary": "Delete voucher (soft delete) in system",
                "operationId": "delete-voucher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id voucher",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Address": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "Area": {
                    "$ref": "#/definitions/models.Area"
                },
                "AreaID": {
                    "type": "integer"
                },
                "ContactName": {
                    "type": "string"
                },
                "Coordinates": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "District": {
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "Phone": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Ward": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.AppSetting": {
            "type": "object",
            "properties": {
                "Android": {
                    "type": "string"
                },
                "Config": {
                    "type": "string"
                },
                "Ios": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Area": {
            "type": "object",
            "properties": {
                "Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "AreaConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AreaConfig"
                    }
                },
                "Name": {
                    "type": "string"
                },
                "Note": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.AreaConfig": {
            "type": "object",
            "properties": {
                "Area": {
                    "$ref": "#/definitions/models.Area"
                },
                "AreaId": {
                    "type": "integer"
                },
                "District": {
                    "type": "string"
                },
                "Province": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Banner": {
            "type": "object",
            "properties": {
                "ExpireTime": {
                    "type": "integer"
                },
                "StartTime": {
                    "type": "integer"
                },
                "Visible": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.Cart": {
            "type": "object",
            "properties": {
                "CartDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CartDetail"
                    }
                },
                "UserID": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.CartDetail": {
            "type": "object",
            "properties": {
                "CartID": {
                    "type": "integer"
                },
                "Cost": {
                    "type": "number"
                },
                "Discount": {
                    "type": "number"
                },
                "Product": {
                    "$ref": "#/definitions/models.Product"
                },
                "ProductID": {
                    "type": "integer"
                },
                "Quantity": {
                    "type": "integer"
                },
                "Variant": {
                    "$ref": "#/definitions/models.Variant"
                },
                "VariantID": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "Image": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "ProductsStore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductStore"
                    }
                },
                "Slug": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.DrugStore": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/definitions/models.Address"
                },
                "AddressID": {
                    "type": "integer"
                },
                "ApproveBy": {
                    "$ref": "#/definitions/models.User"
                },
                "ApproveTime": {
                    "type": "integer"
                },
                "ChildStores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DrugStore"
                    }
                },
                "LicenseFile": {
                    "type": "string"
                },
                "Orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                },
                "OrdersStore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderStore"
                    }
                },
                "Phone": {
                    "type": "string"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductStore"
                    }
                },
                "Representative": {
                    "$ref": "#/definitions/models.User"
                },
                "Staff": {
                    "$ref": "#/definitions/models.User"
                },
                "Status": {
                    "type": "string"
                },
                "StoreName": {
                    "type": "string"
                },
                "TaxNumber": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "Vouchers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Voucher"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Image": {
            "type": "object",
            "properties": {
                "Url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Notification": {
            "type": "object",
            "properties": {
                "Action": {
                    "type": "string"
                },
                "Entity": {
                    "type": "string"
                },
                "EntityId": {
                    "type": "integer"
                },
                "Message": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UserId": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/definitions/models.Address"
                },
                "AddressID": {
                    "type": "integer"
                },
                "Discount": {
                    "type": "number"
                },
                "DrugStoreID": {
                    "type": "integer"
                },
                "Drugstore": {
                    "$ref": "#/definitions/models.DrugStore"
                },
                "Note": {
                    "type": "string"
                },
                "OrderCode": {
                    "type": "string"
                },
                "OrderDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderDetail"
                    }
                },
                "PaymentMethod": {
                    "$ref": "#/definitions/models.PaymentMethod"
                },
                "PaymentMethodID": {
                    "type": "integer"
                },
                "ShippingFee": {
                    "type": "number"
                },
                "Status": {
                    "type": "string"
                },
                "SubTotal": {
                    "type": "number"
                },
                "Total": {
                    "type": "number"
                },
                "Type": {
                    "type": "string"
                },
                "UserApprove": {
                    "$ref": "#/definitions/models.User"
                },
                "UserApproveID": {
                    "type": "integer"
                },
                "UserOrder": {
                    "$ref": "#/definitions/models.User"
                },
                "UserOrderID": {
                    "type": "integer"
                },
                "Vat": {
                    "type": "number"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "oldStatus": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.OrderDetail": {
            "type": "object",
            "properties": {
                "Cost": {
                    "type": "number"
                },
                "Discount": {
                    "type": "number"
                },
                "OrderID": {
                    "type": "integer"
                },
                "Product": {
                    "$ref": "#/definitions/models.Product"
                },
                "ProductID": {
                    "type": "integer"
                },
                "Quantity": {
                    "type": "integer"
                },
                "Variant": {
                    "$ref": "#/definitions/models.Variant"
                },
                "VariantID": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.OrderStore": {
            "type": "object",
            "properties": {
                "Discount": {
                    "type": "number"
                },
                "DrugStoreID": {
                    "type": "integer"
                },
                "Note": {
                    "type": "string"
                },
                "OrderCode": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "SubTotal": {
                    "type": "number"
                },
                "Total": {
                    "type": "number"
                },
                "Type": {
                    "type": "string"
                },
                "Vat": {
                    "type": "number"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "orderStoreDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderStoreDetail"
                    }
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.OrderStoreDetail": {
            "type": "object",
            "properties": {
                "Cost": {
                    "type": "number"
                },
                "Discount": {
                    "type": "number"
                },
                "OrderStoreID": {
                    "type": "integer"
                },
                "Product": {
                    "$ref": "#/definitions/models.Product"
                },
                "ProductID": {
                    "type": "integer"
                },
                "Quantity": {
                    "type": "integer"
                },
                "Variant": {
                    "$ref": "#/definitions/models.Variant"
                },
                "VariantID": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Partner": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/definitions/models.Address"
                },
                "AddressID": {
                    "type": "integer"
                },
                "Email": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Note": {
                    "type": "string"
                },
                "Representative": {
                    "$ref": "#/definitions/models.User"
                },
                "Status": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.PaymentMethod": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Note": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Permission": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "PermissionName": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "ActiveElement": {
                    "type": "string"
                },
                "Avatar": {
                    "type": "string"
                },
                "Barcode": {
                    "type": "string"
                },
                "BasePrice": {
                    "type": "number"
                },
                "Category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "Code": {
                    "type": "string"
                },
                "ConditionVoucher": {
                    "type": "string"
                },
                "Content": {
                    "type": "string"
                },
                "Cost": {
                    "type": "number"
                },
                "Description": {
                    "type": "string"
                },
                "Direction": {
                    "type": "string"
                },
                "DoNotUse": {
                    "type": "string"
                },
                "DrugInteractions": {
                    "type": "string"
                },
                "GlobalManufacturerName": {
                    "type": "string"
                },
                "HasPromote": {
                    "type": "boolean"
                },
                "HasPromoteVoucher": {
                    "type": "boolean"
                },
                "Images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Image"
                    }
                },
                "IndicationsOfTheDrug": {
                    "type": "string"
                },
                "Manufacturer": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Overdose": {
                    "type": "string"
                },
                "PackagingSize": {
                    "type": "string"
                },
                "Percent": {
                    "type": "number"
                },
                "RegistrationNo": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "Storage": {
                    "type": "string"
                },
                "Tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "Unit": {
                    "type": "string"
                },
                "ValueVoucher": {
                    "type": "number"
                },
                "Variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Variant"
                    }
                },
                "Voucher": {
                    "$ref": "#/definitions/models.Voucher"
                },
                "VoucherId": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.ProductInPromotionItem": {
            "type": "object",
            "properties": {
                "Barcode": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Condition": {
                    "type": "string"
                },
                "Cost": {
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                },
                "Percent": {
                    "type": "number"
                },
                "ProductId": {
                    "type": "integer"
                },
                "Type": {
                    "type": "string"
                },
                "Unit": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                },
                "Value": {
                    "type": "number"
                },
                "VariantId": {
                    "type": "integer"
                },
                "VoucherId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.ProductStore": {
            "type": "object",
            "properties": {
                "ActiveElement": {
                    "type": "string"
                },
                "Avatar": {
                    "type": "string"
                },
                "Barcode": {
                    "type": "string"
                },
                "BasePrice": {
                    "type": "number"
                },
                "Category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "Code": {
                    "type": "string"
                },
                "Content": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Direction": {
                    "type": "string"
                },
                "DoNotUse": {
                    "type": "string"
                },
                "DrugInteractions": {
                    "type": "string"
                },
                "GlobalManufacturerName": {
                    "type": "string"
                },
                "Images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Image"
                    }
                },
                "IndicationsOfTheDrug": {
                    "type": "string"
                },
                "Manufacturer": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Overdose": {
                    "type": "string"
                },
                "PackagingSize": {
                    "type": "string"
                },
                "RegistrationNo": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "Storage": {
                    "type": "string"
                },
                "Tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "Unit": {
                    "type": "string"
                },
                "Variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Variant"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Promotion": {
            "type": "object",
            "properties": {
                "AreaId": {
                    "type": "integer"
                },
                "Avatar": {
                    "type": "string"
                },
                "Deleted": {
                    "type": "boolean"
                },
                "EndTime": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Note": {
                    "type": "string"
                },
                "StartTime": {
                    "type": "integer"
                },
                "Status": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "promotionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PromotionDetail"
                    }
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.PromotionDetail": {
            "type": "object",
            "properties": {
                "Condition": {
                    "type": "string"
                },
                "Percent": {
                    "type": "number"
                },
                "Product": {
                    "$ref": "#/definitions/models.Product"
                },
                "ProductID": {
                    "type": "integer"
                },
                "Promotion": {
                    "$ref": "#/definitions/models.Promotion"
                },
                "PromotionID": {
                    "type": "integer"
                },
                "Type": {
                    "type": "string"
                },
                "Value": {
                    "type": "number"
                },
                "Variant": {
                    "$ref": "#/definitions/models.Variant"
                },
                "VariantID": {
                    "type": "integer"
                },
                "VoucherID": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "voucher": {
                    "$ref": "#/definitions/models.Voucher"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "RoleName": {
                    "type": "string"
                },
                "Users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Permission"
                    }
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/definitions/models.Address"
                },
                "CaringDrugstore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DrugStore"
                    }
                },
                "Confirmed": {
                    "type": "boolean"
                },
                "DrugStore": {
                    "$ref": "#/definitions/models.DrugStore"
                },
                "Email": {
                    "type": "string"
                },
                "IsAdmin": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Partner": {
                    "$ref": "#/definitions/models.Partner"
                },
                "Roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "Type": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                },
                "carts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Cart"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.Variant": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "variantValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VariantValue"
                    }
                }
            }
        },
        "models.VariantValue": {
            "type": "object",
            "properties": {
                "convertValue": {
                    "type": "number"
                },
                "operator": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "productID": {
                    "type": "integer"
                },
                "variant": {
                    "$ref": "#/definitions/models.Variant"
                },
                "variantID": {
                    "type": "integer"
                }
            }
        },
        "models.Voucher": {
            "type": "object",
            "properties": {
                "Deleted": {
                    "type": "boolean"
                },
                "MaxValue": {
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                },
                "Note": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Unit": {
                    "type": "string"
                },
                "Value": {
                    "type": "number"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "requests.AddressRequest": {
            "type": "object",
            "required": [
                "Address",
                "AreaID",
                "ContactName",
                "Coordinates",
                "Country",
                "District",
                "IsDefault",
                "Phone",
                "State",
                "Ward"
            ],
            "properties": {
                "Address": {
                    "type": "string",
                    "example": "Quan Hoa"
                },
                "AreaID": {
                    "type": "integer",
                    "example": 1
                },
                "ContactName": {
                    "type": "string",
                    "example": "Jackie"
                },
                "Coordinates": {
                    "type": "string",
                    "example": "Jackie"
                },
                "Country": {
                    "type": "string",
                    "example": "Vietnam"
                },
                "District": {
                    "type": "string",
                    "example": "Cầu giấy"
                },
                "Id": {
                    "type": "integer"
                },
                "IsDefault": {
                    "type": "boolean",
                    "example": true
                },
                "Phone": {
                    "type": "string",
                    "example": "0345532343"
                },
                "State": {
                    "type": "string",
                    "example": "Hà nội"
                },
                "Ward": {
                    "type": "string",
                    "example": "Quan Hoa"
                }
            }
        },
        "requests.AreaConfigListRequest": {
            "type": "object",
            "properties": {
                "AreaConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.AreaConfigRequest"
                    }
                }
            }
        },
        "requests.AreaConfigRequest": {
            "type": "object",
            "properties": {
                "District": {
                    "type": "string"
                },
                "Province": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "requests.AreaRequest": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "Ngoại thành"
                },
                "Note": {
                    "type": "string",
                    "example": "Khu vực ngoại thành"
                }
            }
        },
        "requests.AssignStaffRequest": {
            "type": "object",
            "properties": {
                "DrugStoresIdLst": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "requests.BannerRequest": {
            "type": "object",
            "properties": {
                "ExpireTime": {
                    "type": "integer"
                },
                "Id": {
                    "type": "integer"
                },
                "StartTime": {
                    "type": "integer"
                },
                "Url": {
                    "type": "string"
                },
                "Visible": {
                    "type": "boolean"
                }
            }
        },
        "requests.CartItemRequest": {
            "type": "object",
            "properties": {
                "CartID": {
                    "type": "integer"
                },
                "Cost": {
                    "type": "number"
                },
                "Discount": {
                    "type": "number"
                },
                "ProductID": {
                    "type": "integer"
                },
                "Quantity": {
                    "type": "integer"
                },
                "VariantID": {
                    "type": "integer"
                }
            }
        },
        "requests.CartRequest": {
            "type": "object",
            "properties": {
                "cart_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CartDetail"
                    }
                }
            }
        },
        "requests.CategoryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "name"
                },
                "Note": {
                    "type": "string",
                    "example": "note"
                },
                "Slug": {
                    "type": "string",
                    "example": "slug"
                }
            }
        },
        "requests.ChangeStatusProductsRequest": {
            "type": "object",
            "properties": {
                "ProductsId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Status": {
                    "type": "string",
                    "example": "show/hide/approve/cancel/outofstock"
                }
            }
        },
        "requests.ConnectiveDrugStoreRequest": {
            "type": "object",
            "properties": {
                "ChildStoreId": {
                    "type": "integer",
                    "example": 1
                },
                "ParentStoreId": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "requests.CostProductOfArea": {
            "type": "object",
            "properties": {
                "Cost": {
                    "type": "number"
                },
                "ProductId": {
                    "type": "integer"
                }
            }
        },
        "requests.CreateAccountRequest": {
            "type": "object",
            "required": [
                "IsAdmin",
                "Name",
                "Type",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "DrugStoreID": {
                    "type": "integer"
                },
                "IsAdmin": {
                    "type": "boolean",
                    "example": true
                },
                "Name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "PartnerID": {
                    "type": "integer"
                },
                "Roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Type": {
                    "type": "string",
                    "example": "super_admin/staff/user/supplier/manufacturer"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123qweA@"
                },
                "username": {
                    "type": "string",
                    "example": "JohnDoe"
                }
            }
        },
        "requests.CreateBannerRequest": {
            "type": "object",
            "properties": {
                "BannerList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.BannerRequest"
                    }
                }
            }
        },
        "requests.CreatePartnerRequest": {
            "type": "object",
            "required": [
                "Address",
                "Email",
                "Name",
                "Note",
                "Status",
                "Type"
            ],
            "properties": {
                "Address": {
                    "$ref": "#/definitions/requests.AddressRequest"
                },
                "Email": {
                    "type": "string",
                    "example": "abc@gmail.com"
                },
                "Name": {
                    "type": "string",
                    "example": "MeTri"
                },
                "Note": {
                    "type": "string",
                    "example": "acbasd"
                },
                "Status": {
                    "type": "string",
                    "example": "new"
                },
                "Type": {
                    "type": "string",
                    "example": "supplier/manufacturer"
                }
            }
        },
        "requests.DeleteBanner": {
            "type": "object",
            "properties": {
                "BannerListId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "requests.DrugStoreRequest": {
            "type": "object",
            "required": [
                "Address",
                "LicenseFile",
                "Phone",
                "StoreName",
                "TaxNumber",
                "Type"
            ],
            "properties": {
                "Address": {
                    "$ref": "#/definitions/requests.AddressRequest"
                },
                "AddressID": {
                    "type": "integer"
                },
                "DrugStoreID": {
                    "type": "integer"
                },
                "LicenseFile": {
                    "type": "string",
                    "example": "asdasdasdasd"
                },
                "Phone": {
                    "type": "string",
                    "example": "0314232344"
                },
                "StoreName": {
                    "type": "string",
                    "example": "Lyly''s Store"
                },
                "TaxNumber": {
                    "type": "string",
                    "example": "01293123233"
                },
                "Type": {
                    "type": "string",
                    "example": "drugstores"
                }
            }
        },
        "requests.DrugStoreStatisticRequest": {
            "type": "object",
            "properties": {
                "area_id": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string",
                    "example": "day/month"
                },
                "time_from": {
                    "type": "integer",
                    "example": 1603012735651
                },
                "time_to": {
                    "type": "integer",
                    "example": 1696192735651
                }
            }
        },
        "requests.EditAccountRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@gmail.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "admin"
                },
                "is_admin": {
                    "type": "boolean",
                    "example": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "requests.EditAddressRequest": {
            "type": "object",
            "required": [
                "Address",
                "AreaID",
                "ContactName",
                "Coordinates",
                "Country",
                "District",
                "Id",
                "IsDefault",
                "Phone",
                "State",
                "Ward"
            ],
            "properties": {
                "Address": {
                    "type": "string",
                    "example": "Quan Hoa"
                },
                "AreaID": {
                    "type": "integer",
                    "example": 1
                },
                "ContactName": {
                    "type": "string",
                    "example": "Jackie"
                },
                "Coordinates": {
                    "type": "string",
                    "example": "Jackie"
                },
                "Country": {
                    "type": "string",
                    "example": "Vietnam"
                },
                "District": {
                    "type": "string",
                    "example": "Cầu giấy"
                },
                "Id": {
                    "type": "integer"
                },
                "IsDefault": {
                    "type": "boolean",
                    "example": true
                },
                "Phone": {
                    "type": "string",
                    "example": "0345532343"
                },
                "State": {
                    "type": "string",
                    "example": "Hà nội"
                },
                "Ward": {
                    "type": "string",
                    "example": "Quan Hoa"
                }
            }
        },
        "requests.EditBannerRequest": {
            "type": "object",
            "properties": {
                "BannerList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.BannerRequest"
                    }
                }
            }
        },
        "requests.EditDrugStoreRequest": {
            "type": "object",
            "required": [
                "Address"
            ],
            "properties": {
                "Address": {
                    "$ref": "#/definitions/requests.EditAddressRequest"
                },
                "AddressID": {
                    "type": "integer",
                    "example": 1
                },
                "ApproveTime": {
                    "type": "integer",
                    "example": 1622128376
                },
                "LicenseFile": {
                    "type": "string",
                    "example": "image.img"
                },
                "PhoneNumber": {
                    "type": "string",
                    "example": "0988272123"
                },
                "Status": {
                    "type": "string",
                    "example": "active"
                },
                "StoreName": {
                    "type": "string",
                    "example": "Faker"
                },
                "TaxNumber": {
                    "type": "string",
                    "example": "12341231"
                }
            }
        },
        "requests.EditOrderRequest": {
            "type": "object",
            "properties": {
                "Note": {
                    "type": "string"
                },
                "PaymentMethodID": {
                    "type": "integer"
                },
                "Status": {
                    "type": "string"
                },
                "UserApproveID": {
                    "type": "integer"
                }
            }
        },
        "requests.EditPartnerRequest": {
            "type": "object",
            "required": [
                "Address",
                "Email",
                "Name",
                "Note",
                "Status",
                "Type"
            ],
            "properties": {
                "Address": {
                    "$ref": "#/definitions/requests.EditAddressRequest"
                },
                "Email": {
                    "type": "string",
                    "example": "abc@gmail.com"
                },
                "Name": {
                    "type": "string",
                    "example": "MeTri"
                },
                "Note": {
                    "type": "string",
                    "example": "acbasd"
                },
                "Status": {
                    "type": "string",
                    "example": "new"
                },
                "Type": {
                    "type": "string",
                    "example": "supplier/manufacturer"
                }
            }
        },
        "requests.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123qweA@"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "requests.OrderRequest": {
            "type": "object",
            "properties": {
                "AddressID": {
                    "type": "integer"
                },
                "Discount": {
                    "type": "number"
                },
                "DrugStoreID": {
                    "type": "integer"
                },
                "Note": {
                    "type": "string"
                },
                "OrderCode": {
                    "type": "string"
                },
                "OrderDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderDetail"
                    }
                },
                "PaymentMethodID": {
                    "type": "integer"
                },
                "ShippingFee": {
                    "type": "number"
                },
                "Status": {
                    "type": "string"
                },
                "SubTotal": {
                    "type": "number"
                },
                "Total": {
                    "type": "number"
                },
                "Type": {
                    "type": "string"
                },
                "UserApproveID": {
                    "type": "integer"
                },
                "UserOrderID": {
                    "type": "integer"
                },
                "Vat": {
                    "type": "number"
                }
            }
        },
        "requests.OrderStatisticCountRequest": {
            "type": "object",
            "properties": {
                "area_id": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string",
                    "example": "day/month"
                },
                "time_from": {
                    "type": "integer",
                    "example": 1603012735651
                },
                "time_to": {
                    "type": "integer",
                    "example": 1696192735651
                }
            }
        },
        "requests.OrderStoreStatisticCountRequest": {
            "type": "object",
            "properties": {
                "area_id": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string",
                    "example": "day/month"
                },
                "time_from": {
                    "type": "integer",
                    "example": 1603012735651
                },
                "time_to": {
                    "type": "integer",
                    "example": 1696192735651
                },
                "top": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "requests.PermissionRequest": {
            "type": "object",
            "required": [
                "permission_name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Permission read data user"
                },
                "permission_name": {
                    "type": "string",
                    "example": "read:user"
                }
            }
        },
        "requests.ProductRequest": {
            "type": "object",
            "properties": {
                "ActiveElement": {
                    "type": "string",
                    "example": "example"
                },
                "Avatar": {
                    "type": "string",
                    "example": "example"
                },
                "Barcode": {
                    "type": "string",
                    "example": "example"
                },
                "BasePrice": {
                    "type": "number",
                    "example": 1
                },
                "Categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Code": {
                    "type": "string",
                    "example": "MD01"
                },
                "Content": {
                    "type": "string",
                    "example": "example"
                },
                "Description": {
                    "type": "string",
                    "example": "example"
                },
                "Direction": {
                    "type": "string",
                    "example": "example"
                },
                "DoNotUse": {
                    "type": "string",
                    "example": "example"
                },
                "DrugInteractions": {
                    "type": "string",
                    "example": "example"
                },
                "GlobalManufacturerName": {
                    "type": "string",
                    "example": "example"
                },
                "IndicationsOfTheDrug": {
                    "type": "string",
                    "example": "example"
                },
                "Manufacturer": {
                    "type": "string",
                    "example": "abc"
                },
                "Name": {
                    "type": "string",
                    "example": "name"
                },
                "Overdose": {
                    "type": "string",
                    "example": "example"
                },
                "PackagingSize": {
                    "type": "string",
                    "example": "example"
                },
                "RegistrationNo": {
                    "type": "string",
                    "example": "example"
                },
                "Status": {
                    "type": "string",
                    "example": "show/hide/approve/cancel/outofstock"
                },
                "Storage": {
                    "type": "string",
                    "example": "example"
                },
                "Tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Unit": {
                    "type": "string",
                    "example": "example"
                },
                "Variants": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "requests.ProductStatisticCountRequest": {
            "type": "object",
            "properties": {
                "area_id": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string",
                    "example": "day/month"
                },
                "time_from": {
                    "type": "integer",
                    "example": 1603012735651
                },
                "time_to": {
                    "type": "integer",
                    "example": 1696192735651
                },
                "top": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "requests.PromotionDetailRequest": {
            "type": "object",
            "required": [
                "Percent",
                "ProductID",
                "Type",
                "Value",
                "VariantID",
                "VoucherID"
            ],
            "properties": {
                "Condition": {
                    "type": "string"
                },
                "Percent": {
                    "type": "number"
                },
                "ProductID": {
                    "type": "integer"
                },
                "PromotionID": {
                    "type": "integer"
                },
                "Type": {
                    "type": "string"
                },
                "Value": {
                    "type": "number"
                },
                "VariantID": {
                    "type": "integer"
                },
                "VoucherID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "requests.PromotionDetailRequestList": {
            "type": "object",
            "properties": {
                "PromotionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.PromotionDetailRequest"
                    }
                }
            }
        },
        "requests.PromotionWithDetailRequest": {
            "type": "object",
            "required": [
                "AreaId",
                "EndTime",
                "Name",
                "StartTime",
                "Status"
            ],
            "properties": {
                "AreaId": {
                    "type": "integer"
                },
                "Avatar": {
                    "type": "string"
                },
                "EndTime": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string",
                    "example": "Khuyến mại hè"
                },
                "Note": {
                    "type": "string",
                    "example": "Khuyến mại hè nè"
                },
                "PromotionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.PromotionDetailRequest"
                    }
                },
                "StartTime": {
                    "type": "integer"
                },
                "Status": {
                    "type": "boolean"
                }
            }
        },
        "requests.RefreshRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "example": "refresh_token"
                }
            }
        },
        "requests.RegisterAccountRequest": {
            "type": "object",
            "required": [
                "IsAdmin",
                "Name",
                "Type",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "DrugStoreID": {
                    "type": "integer"
                },
                "IsAdmin": {
                    "type": "boolean",
                    "example": true
                },
                "Name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "PartnerID": {
                    "type": "integer"
                },
                "Roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Type": {
                    "type": "string",
                    "example": "super_admin/staff/user/supplier/manufacturer"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123qweA@"
                },
                "username": {
                    "type": "string",
                    "example": "JohnDoe"
                }
            }
        },
        "requests.RegisterRequest": {
            "type": "object",
            "properties": {
                "AccountRequest": {
                    "$ref": "#/definitions/requests.RegisterAccountRequest"
                },
                "Drugstore": {
                    "$ref": "#/definitions/requests.DrugStoreRequest"
                }
            }
        },
        "requests.RoleRequest": {
            "type": "object",
            "required": [
                "role_name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Manage user"
                },
                "permission": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role_name": {
                    "type": "string",
                    "example": "user_manage"
                }
            }
        },
        "requests.SearchAccountRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@gmail.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "admin"
                },
                "is_admin": {
                    "type": "boolean",
                    "example": true
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                },
                "status": {
                    "type": "string",
                    "example": "true"
                },
                "time_from": {
                    "type": "integer"
                },
                "time_to": {
                    "type": "integer"
                },
                "type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "staff/user/supplier/manufacturer"
                    ]
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "requests.SearchAddressRequest": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string",
                    "example": "Hanoi"
                },
                "AreaID": {
                    "type": "integer",
                    "example": 1
                },
                "ContactName": {
                    "type": "string",
                    "example": "Hanoi"
                },
                "Coordinates": {
                    "type": "string",
                    "example": "Hanoi"
                },
                "District": {
                    "type": "string",
                    "example": "Hanoi"
                },
                "Phone": {
                    "type": "string",
                    "example": "Hanoi"
                },
                "Province": {
                    "type": "string",
                    "example": "Hanoi"
                },
                "Ward": {
                    "type": "string",
                    "example": "Hanoi"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchAreaRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchBannerRequest": {
            "type": "object",
            "properties": {
                "Visible": {
                    "type": "boolean"
                }
            }
        },
        "requests.SearchCategoryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "name"
                },
                "Slug": {
                    "type": "string",
                    "example": "slug"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchDrugStoreRequest": {
            "type": "object",
            "properties": {
                "AddressID": {
                    "type": "integer",
                    "example": 1
                },
                "ApproveTime": {
                    "type": "integer",
                    "example": 1621866181
                },
                "LicenseFile": {
                    "type": "string",
                    "example": "image.img"
                },
                "PhoneNumber": {
                    "type": "string",
                    "example": "0988272123"
                },
                "Status": {
                    "type": "string",
                    "example": "active"
                },
                "StoreName": {
                    "type": "string",
                    "example": "MeTri"
                },
                "TaxNumber": {
                    "type": "string",
                    "example": "12341231"
                },
                "Type": {
                    "type": "string",
                    "example": "parent"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                },
                "time_from": {
                    "type": "integer"
                },
                "time_to": {
                    "type": "integer"
                }
            }
        },
        "requests.SearchNotificationRequest": {
            "type": "object",
            "properties": {
                "UserId": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "requests.SearchOrderRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "order_code": {
                    "type": "string"
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                },
                "status": {
                    "type": "string",
                    "example": "true"
                },
                "time_from": {
                    "type": "integer"
                },
                "time_to": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "requests.SearchPartnerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "MeTri"
                },
                "Status": {
                    "type": "string",
                    "example": "active"
                },
                "Type": {
                    "type": "string",
                    "example": "parent"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                },
                "time_from": {
                    "type": "integer"
                },
                "time_to": {
                    "type": "integer"
                }
            }
        },
        "requests.SearchPermissionRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "permission_name": {
                    "type": "string",
                    "example": "read:user"
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchProductByPromotion": {
            "type": "object",
            "properties": {
                "AreaId": {
                    "type": "integer"
                },
                "ProductName": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchProductPromotion": {
            "type": "object",
            "properties": {
                "AreaId": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                }
            }
        },
        "requests.SearchProductRequest": {
            "type": "object",
            "properties": {
                "AreaId": {
                    "type": "integer"
                },
                "Barcode": {
                    "type": "string",
                    "example": "example"
                },
                "Category": {
                    "type": "integer"
                },
                "Code": {
                    "type": "string",
                    "example": "MD01"
                },
                "Name": {
                    "type": "string",
                    "example": "name"
                },
                "Status": {
                    "type": "string",
                    "example": "show/hide/approve/cancel/outofstock"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                },
                "time_from": {
                    "type": "integer"
                },
                "time_to": {
                    "type": "integer"
                }
            }
        },
        "requests.SearchPromotionDetail": {
            "type": "object",
            "properties": {
                "Condition": {
                    "type": "string"
                },
                "ProductID": {
                    "type": "integer"
                },
                "Type": {
                    "type": "string"
                },
                "VariantID": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "requests.SearchPromotionRequest": {
            "type": "object",
            "properties": {
                "AreaId": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Status": {
                    "type": "boolean"
                },
                "TimeFromEnd": {
                    "type": "integer"
                },
                "TimeFromStart": {
                    "type": "integer"
                },
                "TimeToEnd": {
                    "type": "integer"
                },
                "TimeToStart": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchPureProductRequest": {
            "type": "object",
            "properties": {
                "Barcode": {
                    "type": "string",
                    "example": "example"
                },
                "Category": {
                    "type": "integer"
                },
                "Code": {
                    "type": "string",
                    "example": "MD01"
                },
                "Name": {
                    "type": "string",
                    "example": "name"
                },
                "Status": {
                    "type": "string",
                    "example": "show/hide/approve/cancel/outofstock"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                },
                "time_from": {
                    "type": "integer"
                },
                "time_to": {
                    "type": "integer"
                }
            }
        },
        "requests.SearchRoleRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "role_name": {
                    "type": "string",
                    "example": "role_manage"
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchSettingRequest": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                }
            }
        },
        "requests.SearchSuggestRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "name"
                }
            }
        },
        "requests.SearchTagRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "name"
                },
                "Slug": {
                    "type": "string",
                    "example": "slug"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchVariantRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "name"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SearchVoucherRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort": {
                    "$ref": "#/definitions/requests.SortOption"
                }
            }
        },
        "requests.SetCostProductsOfAreaRequest": {
            "type": "object",
            "properties": {
                "AreaId": {
                    "type": "integer"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.CostProductOfArea"
                    }
                }
            }
        },
        "requests.SettingRequest": {
            "type": "object",
            "properties": {
                "Android": {
                    "type": "string"
                },
                "Config": {
                    "type": "string"
                },
                "Ios": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                }
            }
        },
        "requests.SortOption": {
            "type": "object",
            "properties": {
                "sort_direction": {
                    "type": "string"
                },
                "sort_field": {
                    "type": "string"
                }
            }
        },
        "requests.TagRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "name"
                },
                "Slug": {
                    "type": "string",
                    "example": "slug"
                }
            }
        },
        "requests.VariantRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "name"
                }
            }
        },
        "requests.VoucherRequest": {
            "type": "object",
            "properties": {
                "MaxValue": {
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                },
                "Note": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Value": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "responses.AddressSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.AreaSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Area"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.BannerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Banner"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.CartSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.Cart"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.CategorySearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.CreatedCart": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CartDetail"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.Data": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.DataSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.DrugStoreSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DrugStore"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.DrugStoreStatistic": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "responses.DrugStoreStatisticResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.DrugStoreStatistic"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "responses.GetRelationshipResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DrugStore"
                    }
                }
            }
        },
        "responses.LoginResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "exp": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "responses.MessageDetail": {
            "type": "object",
            "properties": {
                "listProductChangeStatusFail": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "listProductChangeStatusSuccess": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "listProductNotFound": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "responses.NotificationSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Notification"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.OrderCreatedResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.Order"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.OrderDrugstoreCount": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.OrderDrugstoreCountItem"
                    }
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "responses.OrderDrugstoreCountItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "store_name": {
                    "type": "string"
                }
            }
        },
        "responses.OrderDrugstoreCountResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.OrderDrugstoreCount"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.OrderResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.OrderStatisticCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "responses.OrderStatisticCountResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.OrderStatisticCount"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.PartnerSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Partner"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.PaymentMethodResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaymentMethod"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.PermissionSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Permission"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.ProductInPromotionSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductInPromotionItem"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.ProductSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.ProductStatisticCount": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.ProductStatisticCountItem"
                    }
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "responses.ProductStatisticCountItem": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                }
            }
        },
        "responses.ProductStatisticCountResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.ProductStatisticCount"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.PromotionDetailSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PromotionDetail"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.PromotionSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Promotion"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.RoleSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.StatisticNewDrugStore": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "number_store": {
                    "type": "integer"
                }
            }
        },
        "responses.StatisticNewDrugStoreResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.StatisticNewDrugStore"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.TagSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.UserSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.VariantSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Variant"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "responses.VoucherSearch": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Voucher"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "v1.api.medilane.vn",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Medilane account api",
	Description: "This is openapi for account api.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
